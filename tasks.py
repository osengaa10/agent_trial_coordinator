from datetime import datetime
from crewai import Task
from agents import search_term_agent, coordinator_agent
# Create tasks for your agents
get_search_term = Task(
  description=f"""ASK THE HUMAN for their medical diagnosis, symptoms, and medical history.
  Distill the human's response down to a single search term. Feel free to ask the human follow up questions to enhance your search term \n
  Keep the search term short and simple""",
  expected_output='A short and simple medical search term based off of human input.',
  agent=search_term_agent,

)

get_relevant_clinical_trials = Task(
  description=f"""Using the search term generated by the Medical Software Engineer
  make an api call via the clinical_trials_search tool. Input your search term and
  get relevant clinical trials. Do not modify the api response in any way.
  """,
  expected_output='A comprehensive json object containing all relevant clinical trials to the humans condition, leave nothing out',
  agent=search_term_agent,
  context=[get_search_term]

)

curate_the_list = Task(
  description="""Using the search results from the Medical Software Engineer,
  curate a list of the most relevant clinical trials to the patient. Review the eligibility
  requirements of the search results and compare them to the human input. You can always ask
  the human follow up questions in order to refine your list. For each clinical trial in your list, you 
  will provide the official title, contact info and an explanation on how the patient would be a good fit for the clinical trial.""",
  expected_output="""A list of relevant clinical trials for the human. Each clinical trial has contact info, a title, and description on what makes them a good fit.
  it is YOUR job to determine the best trials for the patient.""",
  agent=coordinator_agent,
  context=[get_relevant_clinical_trials]
)


# saving_the_output = Task(
#   description="""Taking the post created by the writer, take this and save it to a markdown file.
#   Your final answer MUST be a response must be showing that the file was saved .""",
#   expected_output='A saved file name',
#   agent=archiver,
#   context=[get_relevant_clinical_trials]
# )

